// https://dbdiagram.io/

Table Users {
  id string [primary key]
  email string [unique, not null]
  master_salt string [not null]
  srp_salt string [not null]
  srp_verifier string [not null]
  rsa_public_key string [not null]
  encrypted_rsa_private_key string [not null]
  encrypted_rsa_private_key_iv string [not null]
  default_workspace_id string [ref: > Workspaces.id, not null]
  created_at timestamp
  updated_at timestamp
}

Table Workspaces {
  id string [primary key]
  name string [not null]
  created_at timestamp
  updated_at timestamp
}

Table Folders {
  id string [primary key]
  workspace_id string [ref: > Workspaces.id, not null]
  name string [not null]
  created_at timestamp
  updated_at timestamp
}

Table Items {
  id string [primary key]
  folder_id string [ref: > Folders.id, not null]
  type string [not null, note: 'Enum: "Login", "Secure Note", etc.']
  display_metadata json
  encrypted_data string [not null]
  encrypted_data_iv string [not null]
  encrypted_record_key string [not null]
  encrypted_record_key_iv string [not null]
  created_at timestamp
  updated_at timestamp
}

Table Relations {
  id string [primary key]
  subject string [not null, note: "The subject of the relation. Format: 'users:<user_id>' or a reference to another relation set, e.g., 'workspaces:<workspace_id>#manager'"]
  relation string [not null, note: "The relation between the subject and object. E.g., 'owner', 'manager', 'editor', 'viewer', 'parent'"]
  object string [not null, note: "The object of the relation. Format: 'workspaces:<workspace_id>', 'folders:<folder_id>', 'items:<item_id>'"]
  encrypted_key string [note: "Stores the encrypted item/folder key for explicit shares (e.g., for 'editor' or 'viewer' relations)"]
  created_at timestamp
  updated_at timestamp
  
  indexes {
    (subject, relation, object) [unique]
  }
}